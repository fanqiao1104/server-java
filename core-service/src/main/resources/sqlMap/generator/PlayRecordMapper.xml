<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sleep.server.dao.mapper.generator.PlayRecordMapper">
  <resultMap id="BaseResultMap" type="com.sleep.server.dao.entity.PlayRecord">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="time" jdbcType="BIGINT" property="time" />
    <result column="app_id" jdbcType="VARCHAR" property="appId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="singles_id" jdbcType="VARCHAR" property="singlesId" />
    <result column="sign_timestamp" jdbcType="BIGINT" property="signTimestamp" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, time, app_id, user_id, singles_id, sign_timestamp
  </sql>
  <select id="selectByExample" parameterType="com.sleep.server.dao.entity.PlayRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from play_records
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from play_records
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from play_records
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.sleep.server.dao.entity.PlayRecordExample">
    delete from play_records
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sleep.server.dao.entity.PlayRecord">
    insert into play_records (id, time, app_id, 
      user_id, singles_id, sign_timestamp
      )
    values (#{id,jdbcType=VARCHAR}, #{time,jdbcType=BIGINT}, #{appId,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR}, #{singlesId,jdbcType=VARCHAR}, #{signTimestamp,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sleep.server.dao.entity.PlayRecord">
    insert into play_records
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="singlesId != null">
        singles_id,
      </if>
      <if test="signTimestamp != null">
        sign_timestamp,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=BIGINT},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="singlesId != null">
        #{singlesId,jdbcType=VARCHAR},
      </if>
      <if test="signTimestamp != null">
        #{signTimestamp,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sleep.server.dao.entity.PlayRecordExample" resultType="java.lang.Long">
    select count(*) from play_records
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update play_records
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=BIGINT},
      </if>
      <if test="record.appId != null">
        app_id = #{record.appId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.singlesId != null">
        singles_id = #{record.singlesId,jdbcType=VARCHAR},
      </if>
      <if test="record.signTimestamp != null">
        sign_timestamp = #{record.signTimestamp,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update play_records
    set id = #{record.id,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=BIGINT},
      app_id = #{record.appId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      singles_id = #{record.singlesId,jdbcType=VARCHAR},
      sign_timestamp = #{record.signTimestamp,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sleep.server.dao.entity.PlayRecord">
    update play_records
    <set>
      <if test="time != null">
        time = #{time,jdbcType=BIGINT},
      </if>
      <if test="appId != null">
        app_id = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="singlesId != null">
        singles_id = #{singlesId,jdbcType=VARCHAR},
      </if>
      <if test="signTimestamp != null">
        sign_timestamp = #{signTimestamp,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sleep.server.dao.entity.PlayRecord">
    update play_records
    set time = #{time,jdbcType=BIGINT},
      app_id = #{appId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      singles_id = #{singlesId,jdbcType=VARCHAR},
      sign_timestamp = #{signTimestamp,jdbcType=BIGINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="logicDelete" parameterType="java.lang.Long">
    update play_records
    set deleted = 1, update_time = REPLACE(unix_timestamp(current_timestamp(3)),'.','') where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="logicDeleteWithUIndex" parameterType="map">
    update play_records A,
    (select C.deleted  from play_records C,
    (select
    <foreach collection="uIndexes" index="index" item="column" separator=",">
      ${column}
    </foreach>
    from play_records where id = #{id,jdbcType=BIGINT}) D
    <where>
      <foreach collection="uIndexes" index="index" item="column">
         and C.${column} = D.${column}
      </foreach>
    </where>
    order by C.deleted desc limit 1) B
    set A.deleted = B.deleted + 1, A.update_time = REPLACE(unix_timestamp(current_timestamp(3)),'.','')
    where A.id = #{id,jdbcType=BIGINT}
    and A.deleted = 0
  </update>
  <insert id="batchInsert" parameterType="java.util.List">
    insert into play_records
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      time,
      app_id,
      user_id,
      singles_id,
      sign_timestamp,
    </trim>
     values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix=" (" suffix=")" suffixOverrides=",">
        #{item.id,jdbcType=VARCHAR},
        #{item.time,jdbcType=BIGINT},
        #{item.appId,jdbcType=VARCHAR},
        #{item.userId,jdbcType=VARCHAR},
        #{item.singlesId,jdbcType=VARCHAR},
        #{item.signTimestamp,jdbcType=BIGINT},
      </trim>
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into play_records
    <foreach close=")" collection="columns" index="index" item="item" open="(" separator=",">
      ${item}
    </foreach>
     values 
    <foreach collection="records" index="index" item="record" separator=",">
      <trim prefix=" (" suffix=")" suffixOverrides=",">
        <foreach collection="columns" index="index" item="column">
          <if test="'id' == column">
            #{record.id,jdbcType=VARCHAR},
          </if>
          <if test="'time' == column">
            #{record.time,jdbcType=BIGINT},
          </if>
          <if test="'app_id' == column">
            #{record.appId,jdbcType=VARCHAR},
          </if>
          <if test="'user_id' == column">
            #{record.userId,jdbcType=VARCHAR},
          </if>
          <if test="'singles_id' == column">
            #{record.singlesId,jdbcType=VARCHAR},
          </if>
          <if test="'sign_timestamp' == column">
            #{record.signTimestamp,jdbcType=BIGINT},
          </if>
        </foreach>
      </trim>
    </foreach>
  </insert>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from play_records
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from play_records
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example != null and example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from play_records
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    <if test="example != null and example.limit != null">
      <if test="example.offset != null">
        limit ${example.offset}, ${example.limit}
      </if>
      <if test="example.offset == null">
        limit ${example.limit}
      </if>
    </if>
  </select>
</mapper>