<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sleep.server.dao.mapper.generator.ContentOrderMapper">
  <resultMap id="BaseResultMap" type="com.sleep.server.dao.entity.ContentOrder">
    <id column="id" jdbcType="BIGINT" property="id" />
    <id column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="third_id" jdbcType="VARCHAR" property="thirdId" />
    <result column="order_money" jdbcType="DECIMAL" property="orderMoney" />
    <result column="actual_money" jdbcType="DECIMAL" property="actualMoney" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="user_type" jdbcType="INTEGER" property="userType" />
    <result column="content_title" jdbcType="VARCHAR" property="contentTitle" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="discount_amount" jdbcType="DECIMAL" property="discountAmount" />
    <result column="expire_time" jdbcType="TIMESTAMP" property="expireTime" />
    <result column="supplier_proportion" jdbcType="INTEGER" property="supplierProportion" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_no, third_id, order_money, actual_money, user_id, user_type, content_title, 
    create_time, pay_time, discount_amount, expire_time, supplier_proportion
  </sql>
  <select id="selectByExample" parameterType="com.sleep.server.dao.entity.ContentOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from content_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from content_order
    where id = #{id,jdbcType=BIGINT}
      and order_no = #{orderNo,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from content_order
    where id = #{id,jdbcType=BIGINT}
      and order_no = #{orderNo,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.sleep.server.dao.entity.ContentOrderExample">
    delete from content_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sleep.server.dao.entity.ContentOrder">
    insert into content_order (id, order_no, third_id, 
      order_money, actual_money, user_id, 
      user_type, content_title, create_time, 
      pay_time, discount_amount, expire_time, 
      supplier_proportion)
    values (#{id,jdbcType=BIGINT}, #{orderNo,jdbcType=VARCHAR}, #{thirdId,jdbcType=VARCHAR}, 
      #{orderMoney,jdbcType=DECIMAL}, #{actualMoney,jdbcType=DECIMAL}, #{userId,jdbcType=VARCHAR}, 
      #{userType,jdbcType=INTEGER}, #{contentTitle,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{payTime,jdbcType=TIMESTAMP}, #{discountAmount,jdbcType=DECIMAL}, #{expireTime,jdbcType=TIMESTAMP}, 
      #{supplierProportion,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sleep.server.dao.entity.ContentOrder">
    insert into content_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="thirdId != null">
        third_id,
      </if>
      <if test="orderMoney != null">
        order_money,
      </if>
      <if test="actualMoney != null">
        actual_money,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="contentTitle != null">
        content_title,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="discountAmount != null">
        discount_amount,
      </if>
      <if test="expireTime != null">
        expire_time,
      </if>
      <if test="supplierProportion != null">
        supplier_proportion,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="thirdId != null">
        #{thirdId,jdbcType=VARCHAR},
      </if>
      <if test="orderMoney != null">
        #{orderMoney,jdbcType=DECIMAL},
      </if>
      <if test="actualMoney != null">
        #{actualMoney,jdbcType=DECIMAL},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=INTEGER},
      </if>
      <if test="contentTitle != null">
        #{contentTitle,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="discountAmount != null">
        #{discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="expireTime != null">
        #{expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="supplierProportion != null">
        #{supplierProportion,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sleep.server.dao.entity.ContentOrderExample" resultType="java.lang.Long">
    select count(*) from content_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update content_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.thirdId != null">
        third_id = #{record.thirdId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderMoney != null">
        order_money = #{record.orderMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.actualMoney != null">
        actual_money = #{record.actualMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=INTEGER},
      </if>
      <if test="record.contentTitle != null">
        content_title = #{record.contentTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.discountAmount != null">
        discount_amount = #{record.discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.expireTime != null">
        expire_time = #{record.expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.supplierProportion != null">
        supplier_proportion = #{record.supplierProportion,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update content_order
    set id = #{record.id,jdbcType=BIGINT},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      third_id = #{record.thirdId,jdbcType=VARCHAR},
      order_money = #{record.orderMoney,jdbcType=DECIMAL},
      actual_money = #{record.actualMoney,jdbcType=DECIMAL},
      user_id = #{record.userId,jdbcType=VARCHAR},
      user_type = #{record.userType,jdbcType=INTEGER},
      content_title = #{record.contentTitle,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      discount_amount = #{record.discountAmount,jdbcType=DECIMAL},
      expire_time = #{record.expireTime,jdbcType=TIMESTAMP},
      supplier_proportion = #{record.supplierProportion,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sleep.server.dao.entity.ContentOrder">
    update content_order
    <set>
      <if test="thirdId != null">
        third_id = #{thirdId,jdbcType=VARCHAR},
      </if>
      <if test="orderMoney != null">
        order_money = #{orderMoney,jdbcType=DECIMAL},
      </if>
      <if test="actualMoney != null">
        actual_money = #{actualMoney,jdbcType=DECIMAL},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=INTEGER},
      </if>
      <if test="contentTitle != null">
        content_title = #{contentTitle,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="discountAmount != null">
        discount_amount = #{discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="expireTime != null">
        expire_time = #{expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="supplierProportion != null">
        supplier_proportion = #{supplierProportion,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
      and order_no = #{orderNo,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sleep.server.dao.entity.ContentOrder">
    update content_order
    set third_id = #{thirdId,jdbcType=VARCHAR},
      order_money = #{orderMoney,jdbcType=DECIMAL},
      actual_money = #{actualMoney,jdbcType=DECIMAL},
      user_id = #{userId,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=INTEGER},
      content_title = #{contentTitle,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      discount_amount = #{discountAmount,jdbcType=DECIMAL},
      expire_time = #{expireTime,jdbcType=TIMESTAMP},
      supplier_proportion = #{supplierProportion,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
      and order_no = #{orderNo,jdbcType=VARCHAR}
  </update>
  <update id="logicDelete" parameterType="java.lang.Long">
    update content_order
    set deleted = 1, update_time = REPLACE(unix_timestamp(current_timestamp(3)),'.','') where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="logicDeleteWithUIndex" parameterType="map">
    update content_order A,
    (select C.deleted  from content_order C,
    (select
    <foreach collection="uIndexes" index="index" item="column" separator=",">
      ${column}
    </foreach>
    from content_order where id = #{id,jdbcType=BIGINT}) D
    <where>
      <foreach collection="uIndexes" index="index" item="column">
         and C.${column} = D.${column}
      </foreach>
    </where>
    order by C.deleted desc limit 1) B
    set A.deleted = B.deleted + 1, A.update_time = REPLACE(unix_timestamp(current_timestamp(3)),'.','')
    where A.id = #{id,jdbcType=BIGINT}
    and A.deleted = 0
  </update>
  <insert id="batchInsert" parameterType="java.util.List">
    insert into content_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      order_no,
      third_id,
      order_money,
      actual_money,
      user_id,
      user_type,
      content_title,
      create_time,
      pay_time,
      discount_amount,
      expire_time,
      supplier_proportion,
    </trim>
     values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix=" (" suffix=")" suffixOverrides=",">
        #{item.id,jdbcType=BIGINT},
        #{item.orderNo,jdbcType=VARCHAR},
        #{item.thirdId,jdbcType=VARCHAR},
        #{item.orderMoney,jdbcType=DECIMAL},
        #{item.actualMoney,jdbcType=DECIMAL},
        #{item.userId,jdbcType=VARCHAR},
        #{item.userType,jdbcType=INTEGER},
        #{item.contentTitle,jdbcType=VARCHAR},
        #{item.createTime,jdbcType=TIMESTAMP},
        #{item.payTime,jdbcType=TIMESTAMP},
        #{item.discountAmount,jdbcType=DECIMAL},
        #{item.expireTime,jdbcType=TIMESTAMP},
        #{item.supplierProportion,jdbcType=INTEGER},
      </trim>
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into content_order
    <foreach close=")" collection="columns" index="index" item="item" open="(" separator=",">
      ${item}
    </foreach>
     values 
    <foreach collection="records" index="index" item="record" separator=",">
      <trim prefix=" (" suffix=")" suffixOverrides=",">
        <foreach collection="columns" index="index" item="column">
          <if test="'id' == column">
            #{record.id,jdbcType=BIGINT},
          </if>
          <if test="'order_no' == column">
            #{record.orderNo,jdbcType=VARCHAR},
          </if>
          <if test="'third_id' == column">
            #{record.thirdId,jdbcType=VARCHAR},
          </if>
          <if test="'order_money' == column">
            #{record.orderMoney,jdbcType=DECIMAL},
          </if>
          <if test="'actual_money' == column">
            #{record.actualMoney,jdbcType=DECIMAL},
          </if>
          <if test="'user_id' == column">
            #{record.userId,jdbcType=VARCHAR},
          </if>
          <if test="'user_type' == column">
            #{record.userType,jdbcType=INTEGER},
          </if>
          <if test="'content_title' == column">
            #{record.contentTitle,jdbcType=VARCHAR},
          </if>
          <if test="'create_time' == column">
            #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="'pay_time' == column">
            #{record.payTime,jdbcType=TIMESTAMP},
          </if>
          <if test="'discount_amount' == column">
            #{record.discountAmount,jdbcType=DECIMAL},
          </if>
          <if test="'expire_time' == column">
            #{record.expireTime,jdbcType=TIMESTAMP},
          </if>
          <if test="'supplier_proportion' == column">
            #{record.supplierProportion,jdbcType=INTEGER},
          </if>
        </foreach>
      </trim>
    </foreach>
  </insert>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from content_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from content_order
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example != null and example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from content_order
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    <if test="example != null and example.limit != null">
      <if test="example.offset != null">
        limit ${example.offset}, ${example.limit}
      </if>
      <if test="example.offset == null">
        limit ${example.limit}
      </if>
    </if>
  </select>
</mapper>